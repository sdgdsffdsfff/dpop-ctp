define("echarts/layout/Tree",["require","zrender/tool/vector"],function(require){function t(t){t=t||{},this.nodePadding=t.nodePadding||30,this.layerPadding=t.layerPadding||100,this._layerOffsets=[],this._layers=[]}var e=require("zrender/tool/vector");return t.prototype.run=function(t){this._layerOffsets.length=0;for(var e=0;e<t.root.height+1;e++)this._layerOffsets[e]=0,this._layers[e]=[];this._updateNodeXPosition(t.root);var i=t.root;this._updateNodeYPosition(i,0,i.layout.height)},t.prototype._updateNodeXPosition=function(t){var i=1/0,s=-1/0;t.layout.position=t.layout.position||e.create();for(var o=0;o<t.children.length;o++){var a=t.children[o];this._updateNodeXPosition(a);var n=a.layout.position[0];if(i>n)i=n;if(n>s)s=n}if(t.children.length>0)t.layout.position[0]=(i+s)/2;else t.layout.position[0]=0;var r=this._layerOffsets[t.depth]||0;if(r>t.layout.position[0]){var h=r-t.layout.position[0];this._shiftSubtree(t,h);for(var o=t.depth+1;o<t.height+t.depth;o++)this._layerOffsets[o]+=h}this._layerOffsets[t.depth]=t.layout.position[0]+t.layout.width+this.nodePadding,this._layers[t.depth].push(t)},t.prototype._shiftSubtree=function(t,e){t.layout.position[0]+=e;for(var i=0;i<t.children.length;i++)this._shiftSubtree(t.children[i],e)},t.prototype._updateNodeYPosition=function(t,e,i){t.layout.position[1]=e;for(var s=0,o=0;o<t.children.length;o++)s=Math.max(t.children[o].layout.height,s);var a=this.layerPadding;if("function"==typeof a)a=a(t.depth);for(var o=0;o<t.children.length;o++)this._updateNodeYPosition(t.children[o],e+a+i,s)},t});