function encodePolygon(e,t){var i="",n=quantize(e[0][0]),a=quantize(e[0][1]);t[0]=n,t[1]=a;for(var o=0;o<e.length;o++){var s=e[o];i+=encode(s[0],n),i+=encode(s[1],a),n=quantize(s[0]),a=quantize(s[1])}return i}function addAMDWrapper(e){return["define(function() {","    return "+e+";","});"].join("\n")}function encode(e,t){if(e=quantize(e),e-=t,(e<<1^e>>15)+64===8232)e--;return e=e<<1^e>>15,String.fromCharCode(e+64)}function quantize(e){return Math.ceil(1024*e)}var fs=require("fs"),glob=require("glob");glob("geoJson/*.json",{},function(e,t){t.forEach(function(e){var t="../"+e.replace(".json",".js"),i=fs.readFileSync(e,"utf8"),n=JSON.parse(i);console.log(t),n.UTF8Encoding=!0;var a=n.features;if(a)a.forEach(function(e){var t=e.geometry.encodeOffsets=[],i=e.geometry.coordinates;if("Polygon"===e.geometry.type)i.forEach(function(e,n){i[n]=encodePolygon(e,t[n]=[])});else if("MultiPolygon"===e.geometry.type)i.forEach(function(e,n){t[n]=[],e.forEach(function(e,a){i[n][a]=encodePolygon(e,t[n][a]=[])})})}),fs.writeFileSync(t,addAMDWrapper(JSON.stringify(n)),"utf8")})});