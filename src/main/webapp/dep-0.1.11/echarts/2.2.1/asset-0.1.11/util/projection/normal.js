define("echarts/util/projection/normal",[],function(){function e(e,i){if(i=i||{},!e.srcSize)t(e,i);return e.srcSize}function t(e,t){t=t||{},s.xmin=360,s.xmax=-360,s.ymin=180,s.ymax=-180;for(var i,n,a=e.features,o=0,l=a.length;l>o;o++)if(n=a[o],!n.properties.name||!t[n.properties.name])switch(n.type){case"Feature":s[n.geometry.type](n.geometry.coordinates);break;case"GeometryCollection":i=n.geometries;for(var r=0,h=i.length;h>r;r++)s[i[r].type](i[r].coordinates)}else;return e.srcSize={left:1*s.xmin.toFixed(4),top:1*s.ymin.toFixed(4),width:1*(s.xmax-s.xmin).toFixed(4),height:1*(s.ymax-s.ymin).toFixed(4)},e}function i(e,i,n){function a(e,t){c=e.type,y=e.coordinates,o._bbox={xmin:360,xmax:-360,ymin:180,ymax:-180},b=o[c](y),V.push({path:b,cp:t.properties.cp?o.makePoint(t.properties.cp):o.makePoint([(o._bbox.xmin+o._bbox.xmax)/2,(o._bbox.ymin+o._bbox.ymax)/2]),properties:t.properties,id:t.id})}if(n=n||{},o.scale=null,o.offset=null,!e.srcSize)t(e,n);i.offset={x:e.srcSize.left,y:e.srcSize.top,left:i.OffsetLeft||0,top:i.OffsetTop||0},o.scale=i.scale,o.offset=i.offset;for(var s,l,r,h=e.features,V=[],U=0,m=h.length;m>U;U++)if(r=h[U],!r.properties.name||!n[r.properties.name]){if("Feature"==r.type)a(r.geometry,r);else if("GeometryCollection"==r.type){s=r.geometries;for(var p=0,d=s.length;d>p;p++)l=s[p],a(l,l)}}else;var c,y,b;return V}function n(e,t){var i,n;if(t instanceof Array)i=1*t[0],n=1*t[1];else i=1*t.x,n=1*t.y;return i=i/e.scale.x+e.offset.x-168.5,i=i>180?i-360:i,n=90-(n/e.scale.y+e.offset.y),[i,n]}function a(e,t){return o.offset=e.offset,o.scale=e.scale,t instanceof Array?o.makePoint([1*t[0],1*t[1]]):o.makePoint([1*t.x,1*t.y])}var o={formatPoint:function(e){return[(e[0]<-168.5&&e[1]>63.8?e[0]+360:e[0])+168.5,90-e[1]]},makePoint:function(e){var t=this,i=t.formatPoint(e);if(t._bbox.xmin>e[0])t._bbox.xmin=e[0];if(t._bbox.xmax<e[0])t._bbox.xmax=e[0];if(t._bbox.ymin>e[1])t._bbox.ymin=e[1];if(t._bbox.ymax<e[1])t._bbox.ymax=e[1];var n=(i[0]-o.offset.x)*o.scale.x+o.offset.left,a=(i[1]-o.offset.y)*o.scale.y+o.offset.top;return[n,a]},Point:function(e){return e=this.makePoint(e),e.join(",")},LineString:function(e){for(var t,i="",n=0,a=e.length;a>n;n++)if(t=o.makePoint(e[n]),0===n)i="M"+t.join(",");else i=i+"L"+t.join(",");return i},Polygon:function(e){for(var t="",i=0,n=e.length;n>i;i++)t=t+o.LineString(e[i])+"z";return t},MultiPoint:function(e){for(var t=[],i=0,n=e.length;n>i;i++)t.push(o.Point(e[i]));return t},MultiLineString:function(e){for(var t="",i=0,n=e.length;n>i;i++)t+=o.LineString(e[i]);return t},MultiPolygon:function(e){for(var t="",i=0,n=e.length;n>i;i++)t+=o.Polygon(e[i]);return t}},s={formatPoint:o.formatPoint,makePoint:function(e){var t=this,i=t.formatPoint(e),n=i[0],a=i[1];if(t.xmin>n)t.xmin=n;if(t.xmax<n)t.xmax=n;if(t.ymin>a)t.ymin=a;if(t.ymax<a)t.ymax=a},Point:function(e){this.makePoint(e)},LineString:function(e){for(var t=0,i=e.length;i>t;t++)this.makePoint(e[t])},Polygon:function(e){for(var t=0,i=e.length;i>t;t++)this.LineString(e[t])},MultiPoint:function(e){for(var t=0,i=e.length;i>t;t++)this.Point(e[t])},MultiLineString:function(e){for(var t=0,i=e.length;i>t;t++)this.LineString(e[t])},MultiPolygon:function(e){for(var t=0,i=e.length;i>t;t++)this.Polygon(e[t])}};return{getBbox:e,geoJson2Path:i,pos2geo:n,geo2pos:a}});