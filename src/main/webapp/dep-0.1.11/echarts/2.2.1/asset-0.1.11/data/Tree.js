define("echarts/data/Tree",["require"],function(){function t(t){this.id=t,this.depth=0,this.height=0,this.children=[]}function e(e){this.root=new t(e)}return t.prototype.traverse=function(t,e){t.call(e,this);for(var i=0;i<this.children.length;i++)this.children[i].traverse(t,e)},t.prototype.updateDepthAndHeight=function(t){var e=0;this.depth=t;for(var i=0;i<this.children.length;i++){var s=this.children[i];if(s.updateDepthAndHeight(t+1),s.height>e)e=s.height}this.height=e+1},t.prototype.getNodeById=function(t){if(this.id===t)return this;for(var e=0;e<this.children.length;e++){var i=this.children[e].getNodeById(t);if(i)return i}},e.prototype.traverse=function(t,e){this.root.traverse(t,e)},e.prototype.getSubTree=function(t){var i=this.getNodeById(t);if(i){var s=new e(i.id);return s.root=i,s}},e.prototype.getNodeById=function(t){return this.root.getNodeById(t)},e.fromGraph=function(i){function s(t){for(var e=i.getNodeById(t.id),a=0;a<e.outEdges.length;a++){var r=e.outEdges[a],n=o[r.node2.id];t.children.push(n),s(n)}}for(var a={},o={},r=0;r<i.nodes.length;r++){var n,h=i.nodes[r];if(0===h.inDegree())a[h.id]=new e(h.id),n=a[h.id].root;else n=new t(h.id);n.data=h.data,o[h.id]=n}var l=[];for(var d in a)s(a[d].root),a[d].root.updateDepthAndHeight(0),l.push(a[d]);return l},e});