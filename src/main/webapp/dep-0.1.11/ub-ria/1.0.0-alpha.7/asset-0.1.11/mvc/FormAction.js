define("ub-ria/mvc/FormAction",["require","er/util","underscore","er/Deferred","./BaseAction","./FormModel","er/events"],function(require){function e(){s.apply(this,arguments)}function t(e){var t=this.handleSubmitError(e);if(!t)require("er/events").notifyError(e.responseText)}function n(){var e=this.fire("submitcancel"),t=this.fire("handlefinish");if(!e.isDefaultPrevented()&&!t.isDefaultPrevented())this.redirectAfterCancel()}function i(){var e=this.view.getEntity();this.view.disableSubmit(),require("er/Deferred").when(this.submitEntity(e)).ensure(r.bind(this.view.enableSubmit,this.view))}var a=require("er/util"),r=require("underscore"),o=require("er/Deferred"),s=require("./BaseAction");return a.inherits(e,s),e.prototype.modelType=require("./FormModel"),e.prototype.category="form",e.prototype.handleSubmitError=function(e){if(409===e.status)e=a.parseJSON(e.responseText);if(e.fields)return this.view.notifyErrors(e),!0;else return!1},e.prototype.handleSubmitResult=function(e){var t=this.fire("entitysave",{entity:e});if(!t.isDefaultPrevented()){var n=this.getSubmitHandler();if(n)n.handle(e,this)}this.fire("handlefinish")},e.prototype.getSubmitHandler=function(){return this.submitHandler},e.prototype.setSubmitHandler=function(e){this.submitHandler=e},e.prototype.getMethod=function(e){var t={create:"save",update:"update",copy:"save"};return t[e]||null},e.prototype.submitEntity=function(e){var n=this.getMethod(this.context.formType);try{if(n)return this.model[n](e).then(r.bind(this.handleSubmitResult,this),r.bind(t,this));else throw new Error("Cannot find formType in methodMap")}catch(i){return o.rejected(i)}},e.prototype.cancelConfirmTitle="确认取消编辑",e.prototype.getCancelConfirmTitle=function(){return this.cancelConfirmTitle},e.prototype.cancelConfirmMessage="取消编辑将不保留已经填写的数据，确定继续吗？",e.prototype.getCancelConfirmMessage=function(){return this.cancelConfirmMessage},e.prototype.cancelEdit=function(){var e=this.model.get("initialFormData");if(this.isFormDataChanged(e)){var t={title:this.getCancelConfirmTitle(),content:this.getCancelConfirmMessage()};this.view.waitCancelConfirm(t).then(r.bind(n,this))}else n.call(this)},e.prototype.redirectAfterCancel=function(){this.back("/"+this.getEntityName()+"/list")},e.prototype.isFormDataChanged=function(){return!1},e.prototype.initBehavior=function(){s.prototype.initBehavior.apply(this,arguments);var e=this.view.getFormData();this.model.set("initialFormData",e,{silent:!0}),this.view.on("submit",i,this),this.view.on("cancel",this.cancelEdit,this)},e});